[tool.poetry]
name = "tiny-userpic"
version = "0.2.0"
description = "A small Python module for userpics creation"
authors = ["Aleksandr Shpak <shpaker@gmail.com>"]
readme = "readme.md"
homepage = "https://github.com/shpaker/tiny-userpic"
repository = "https://github.com/shpaker/tiny-userpic"
packages = [
  { include = "userpic" },
]

[tool.poetry.dependencies]
python = "^3.7.2"
CairoSVG = { version = "^2.5.2", optional = true }
click = "^8.1.3"

[tool.poetry.dev-dependencies]
pre-commit = "^2.13.0"
isort = "^5.10.1"
black = "^22.6.0"
flake8 = "^4.0.1"
pylint = "^2.14.5"
mypy = "^0.971"
pytest = "^7.1.2"
python-magic = "^0.4.27"

[tool.poetry.extras]
cairo = ["CairoSVG"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
verbose = 1
color = true
exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.mypy_cache
    | \.pytest_cache
    | \.venv
  )/
)
'''

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88
src_paths = ["app", "test"]
skip = [".mypy_cache", ".pytest_cache", "venv"]

[tool.pylint.messages_control]
disable = "missing-docstring,logging-fstring-interpolation,too-few-public-methods,too-many-arguments"
extend-ignore = "E203,W503"

[tool.pylint.format]
max-line-length = "88"
indent-string = "    "
good-names = "i, x, y"

[tool.pylint.master]
ignore = "venv,tests"
indent-string = "    "
extension-pkg-whitelist = "pydantic"
