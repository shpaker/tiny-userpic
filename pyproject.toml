[tool.black]
line-length = 88
verbose = 1
color = true
exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.mypy_cache
    | \.pytest_cache
    | \.venv
  )/
)
'''

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 120
src_paths = ["app", "test"]
skip = [".mypy_cache", ".pytest_cache", "venv"]

[tool.pylint.messages_control]
disable = "missing-docstring,logging-fstring-interpolation,too-few-public-methods,too-many-arguments"
extend-ignore = "E203,W503"

[tool.pylint.format]
max-line-length = "88"
indent-string = "    "
good-names = "i, x, y"

[tool.pylint.master]
ignore = "venv,tests"
indent-string = "    "
extension-pkg-whitelist = "pydantic"

[tool.poetry]
name = "tiny-userpic"
version = "0.1.1"
description = "A small Python module for userpics creation"
authors = ["Aleksandr Shpak <shpaker@gmail.com>"]
packages = [
  { include = "userpic" },
]

[tool.poetry.dependencies]
python = "^3.7"
CairoSVG = "^2.5.2"
typer = "^0.3.2"

[tool.poetry.dev-dependencies]
pre-commit = "^2.13.0"
isort = "^5.9.1"
black = "^21.6b0"
flake8 = "^3.9.2"
pylint = "^2.9.3"
mypy = "^0.910"
pytest = "^6.2.4"
python-magic = "^0.4.24"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
